// Generated by LiveScript 1.3.1
var react;
react = require('react/addons');
module.exports = {
  /**
   * Return the selection the normalised selection model:
   *  - nodes are sorted in ascending order
   *  - includes the selection start and end for both nodes
   * @type {[type]}
   */
  getSelectionModel: function(){
    var selection, anchor, extent, anchorOffset, extentOffset, nodes;
    selection = window.getSelection();
    anchor = this.normaliseSelectionNode(selection.anchorNode);
    extent = this.normaliseSelectionNode(selection.focusNode);
    anchorOffset = selection.anchorOffset;
    extentOffset = selection.focusOffset;
    if (anchor === extent) {
      return {
        multilineSelection: false,
        type: selection.type,
        normalTextOnly: this.hasNodeNormalTextOnly(anchor),
        nodes: [{
          node: anchor,
          tagKey: anchor.getAttribute('data-tag-key'),
          selectionStart: Math.min(anchorOffset, extentOffset),
          selectionEnd: Math.max(anchorOffset, extentOffset)
        }]
      };
    } else {
      nodes = [
        {
          node: anchor,
          offset: anchorOffset,
          tagKey: anchor.getAttribute('data-tag-key')
        }, {
          node: extent,
          offset: extentOffset,
          tagKey: extent.getAttribute('data-tag-key')
        }
      ];
      nodes.sort(function(a, b){
        if (a.tagKey <= b.tagKey) {
          return -1;
        } else {
          return 1;
        }
      });
      nodes[0].selectionStart = nodes[0].offset;
      nodes[0].selectionEnd = nodes[0].node.firstChild.length;
      nodes[1].selectionStart = 0;
      nodes[1].selectionEnd = nodes[1].offset;
      return {
        multilineSelection: true,
        type: selection.type,
        normalTextOnly: this.hasNodeNormalTextOnly(anchor) && this.hasNodeNormalTextOnly(extent),
        nodes: nodes
      };
    }
  },
  normaliseSelectionNode: function(node){
    if (!node.tagName) {
      return node.parentNode;
    } else {
      return node;
    }
  },
  hasNodeNormalTextOnly: function(node){
    if (node.parentNode.getAttribute('data-tag-key') === 'root') {
      return true;
    } else {
      return false;
    }
  }
};